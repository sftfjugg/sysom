import json
from fastapi import APIRouter

router = APIRouter()


@router.get("/demo_data")
async def demo_data():
    mock_data = '{"success":true,"data":{"hostOverview":{"numberOfClusters":10,"numberOfHosts":1000,"numberOfOnlineMachines":900,"numberOfOfflineMachines":90,"numberOfAbnormalMachines":10},"numberOfPhysicalMachines":[{"date":"10/1\n2021","value":38},{"date":"11/1\n2021","value":52},{"date":"12/1\n2021","value":61},{"date":"1/1\n2022","value":145},{"date":"2/1\n2022","value":48},{"date":"3/1\n2022","value":38}],"kernelVersionStatistics":[{"version":"4.19\n.91","value":38},{"version":"4.19\n.92","value":52},{"version":"4.19\n.93","value":61},{"version":"4.19\n.94","value":145},{"version":"4.19\n.95","value":48}],"logOverview":{"numberOfLogs":1000,"totalNumberOfUsers":1500,"numberOfAbnormalLogs":1000},"userNumbersTrends":[{"date":"10/1\n2021","value":38},{"date":"11/1\n2021","value":52},{"date":"12/1\n2021","value":61},{"date":"1/1\n2022","value":145},{"date":"2/1\n2022","value":48},{"date":"3/1\n2022","value":38}],"logsTrends":[{"date":"10/1\n2021","value":38},{"date":"11/1\n2021","value":52},{"date":"12/1\n2021","value":61},{"date":"1/1\n2022","value":145},{"date":"2/1\n2022","value":48},{"date":"3/1\n2022","value":38}],"resourceOverview":{"totalNumberOfCPUs":1000,"totalMemory":2000,"totalDiskSize":1000,"totalNetworkBandwidth":1000},"resourceUtilization":{"cpuUtilization":10,"memoryUtilization":50,"diskUtilization":60,"networkUtilization":50},"cpuUtilization":[{"date":"10/1 2021","value":38},{"date":"11/1 2021","value":52},{"date":"12/1 2021","value":61},{"date":"1/1 2022","value":100},{"date":"2/1 2022","value":48},{"date":"3/1 2022","value":38}],"memoryUtilization":[{"date":"10/1 2021","value":40},{"date":"11/1 2021","value":30},{"date":"12/1 2021","value":50},{"date":"1/1 2022","value":10},{"date":"2/1 2022","value":30},{"date":"3/1 2022","value":60}],"diskUtilization":[{"date":"10/1\n2021","value":38},{"date":"11/1\n2021","value":52},{"date":"12/1\n2021","value":61},{"date":"1/1\n2022","value":100},{"date":"2/1\n2022","value":48},{"date":"3/1\n2022","value":38}],"networkUtilization":[{"date":"10/1\n2021","value":38},{"date":"11/1\n2021","value":52},{"date":"12/1\n2021","value":61},{"date":"1/1\n2022","value":100},{"date":"2/1\n2022","value":48},{"date":"3/1\n2022","value":38}],"CVEOverview":{"safetyRating":{"score":"95分","type":"安全"},"CVETobeFixed":{"Critical":5,"Important":6,"Moderate":10,"Low":20},"CVEFixed":{"Critical":5,"Important":6,"Moderate":10,"Low":20}},"securityOperationsTrends":[{"date":"10/1\n2021","type":"已处理告警","value":40},{"date":"11/1\n2021","type":"已处理告警","value":100},{"date":"12/1\n2021","type":"已处理告警","value":66},{"date":"1/1\n2022","type":"已处理告警","value":130},{"date":"2/1\n2022","type":"已处理告警","value":40},{"date":"3/1\n2022","type":"已处理告警","value":100},{"date":"10/1\n2021","type":"已处理漏洞","value":38},{"date":"11/1\n2021","type":"已处理漏洞","value":52},{"date":"12/1\n2021","type":"已处理漏洞","value":5},{"date":"1/1\n2022","type":"已处理漏洞","value":80},{"date":"2/1\n2022","type":"已处理漏洞","value":48},{"date":"3/1\n2022","type":"已处理漏洞","value":38},{"date":"10/1\n2021","type":"已处理基线","value":38},{"date":"11/1\n2021","type":"已处理基线","value":52},{"date":"12/1\n2021","type":"已处理基线","value":61},{"date":"1/1\n2022","type":"已处理基线","value":145},{"date":"2/1\n2022","type":"已处理基线","value":48},{"date":"3/1\n2022","type":"已处理基线","value":38}],"CarshOverview":{"monthlyCrashTimes":10,"weeklyCrashTimes":50,"monthlyCrashRate":"60%","weeklyCrashRate":"50%"},"carshTrends":[{"date":"10/1\n2021","version":"4.19","value":40},{"date":"11/1\n2021","version":"4.19","value":50},{"date":"12/1\n2021","version":"4.19","value":66},{"date":"1/1\n2022","version":"4.19","value":130},{"date":"2/1\n2022","version":"4.19","value":40},{"date":"3/1\n2022","version":"4.19","value":60},{"date":"10/1\n2021","version":"3.10","value":38},{"date":"11/1\n2021","version":"3.10","value":52},{"date":"12/1\n2021","version":"3.10","value":61},{"date":"1/1\n2022","version":"3.10","value":145},{"date":"2/1\n2022","version":"3.10","value":48},{"date":"3/1\n2022","version":"3.10","value":38}]}}'
    mock_data = mock_data.replace("\n", "\\n")
    return json.loads(mock_data)
