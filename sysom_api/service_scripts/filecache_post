#!/usr/bin/python3
# coding=utf-8
import sys
import json
import random

def debug_log(msg):
    log_file = "/tmp/.file.txt"
    fd = open(log_file, 'w+')
    fd.write(str(msg))
    fd.close()
    

def filecache_result(raw):
    outdata = {}
    if raw.find("sort_file") == -1:
        outdata = {"status": "fail"}
        print(outdata)
        return
    rawdata = json.loads(raw)
    cache = {"podmem":{"data":[]}}
    cache_type = rawdata['type']
    podid = cache_type
    data = rawdata['data']
    for key, _value in data.items():
        for value in _value:
            if len(value['sort_file']) == 0:
                continue
            sort_file = value['sort_file']
            i = 0
            for files in sort_file:
                row = {}
                row['key'] = i
                row['容器组'] = key
                row['容器'] = value["id"]
                row['文件名'] = files['file']
                row['文件大小'] = files['size']
                row['缓存大小'] = files['cached']
                row['活跃缓存'] = files['active']
                row['非活跃缓存'] = files['inactive']
                ext = 's:'+str(files['shmem']) + ',d:'+str(files['delete'])
                row['其他信息'] = ext
                i = i + 1
                cache['podmem']['data'].append(row)
    print(json.dumps(cache, ensure_ascii=False))


def extract_params():
    path, res, task_id = sys.argv[1], "", sys.argv[2]
    with open(path, 'r') as tmp:
        res = tmp.read()
    return res, task_id

if __name__ == "__main__":
    res, _ = extract_params()
    filecache_result(res)
